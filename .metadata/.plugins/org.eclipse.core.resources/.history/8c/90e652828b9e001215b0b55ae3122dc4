package shas.devices;

import java.io.IOException;
import java.sql.SQLException;
import java.text.Format;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.swing.JOptionPane;

import org.apache.catalina.connector.Request;

import shas.logic.SprinklerService;

/**
 * Servlet implementation class SprinklerServlet
 */
public class SprinklerServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public SprinklerServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		System.out.println("entering dopost");
		
	
		
		if(request.getParameter("btnSchedule")!=null)
		{
			try {
				HandleSchedule(request,response);
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		if(request.getParameter("btnApplyOverride")!=null)
		{
			try {
				HandleOverrideSchedule(request,response);
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		if(request.getParameter("btnApplyMaintenance")!=null)
		{
			HandleMaintenanceSchedule(request,response);
		}

		String schedulestatus = request.getParameter("btnSchedule");		
		String str = (String )request.getAttribute("btnApplyMaintenance");

		
		request.getRequestDispatcher("SprinklerGUI.jsp").forward(request,response);
		 //System.out.println("Sprinkler...!!");
	}

	
	

	void HandleSchedule(HttpServletRequest request, HttpServletResponse response) throws SQLException
	{		
		Date dtfromdate=null,dttodate=null;
	    Integer intlevel=10, intduration=15;
		 try {
			 
			//-------- required field validations -----------------------------//
				
			 Boolean bRequired = false;
			 StringBuilder sbMessage = new StringBuilder("Please enter / correct the following:");
				if(request.getParameter("fromDate").trim()== "")
				{
					sbMessage.append("From Date");
					bRequired = true;
				}
				if(request.getParameter("toDate").trim()== "")
				{
					sbMessage.append(", To Date");
					bRequired = true;
				}
				if(request.getParameter("level").trim()== "")
				{
					sbMessage.append(", Sprinkler Level, ");
					bRequired = true;
				}
				if(request.getParameter("duration").trim()== "")
				{
					sbMessage.append(", Duration ");
					bRequired = true;
				}
				
				
				 Boolean bDateValid= false;
				 StringBuilder sbDateValid = new StringBuilder("Please enter the following details:");
				 
				
		    	SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm",Locale.ENGLISH);
		    	dtfromdate = df.parse(request.getParameter("fromDate"));
				dttodate = df.parse(request.getParameter("toDate"));		
				intlevel = Integer.parseInt(request.getParameter("level"));
				intduration = Integer.parseInt(request.getParameter("duration"));
					
				 if(dttodate.compareTo(dtfromdate) < 0)
				 {
					 bRequired = true;
					 sbMessage.append("\n From Date should be less than the To Date");
				 }
					
				 	if (bRequired == true)
					{
						request.setAttribute("ssReqFieldDefault", sbMessage);
						return;
					}
	
					
					
					
		    	
		  } catch (ParseException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		  }
					
		  
		//---- toggle button value to show status --------------------------//
		
		if(request.getParameter("btnSchedule").compareTo("Scheduler On")==0)
		{
			
			//---- Call the function to set the sprinkler On ----------------//
			Schedule objSchedule = new Schedule(dtfromdate, dttodate, intlevel, intduration, 1);
			SprinklerService objSprService = new SprinklerService();
			Boolean SprinklerStatus = objSprService.SetSprinklerSetting(objSchedule, false);
			if (SprinklerStatus == true)
			{
				request.setAttribute("schedulerstatus", "Scheduler Off");
				//---set override---//
				request.setAttribute("overrideok", "on");
				
				System.out.println("Sprinkler  Settings on");	
				//---maintain control values----------------------------------//
				request.setAttribute("cfromDate", request.getParameter("fromDate"));
				request.setAttribute("ctoDate", request.getParameter("toDate"));
				request.setAttribute("clevel", request.getParameter("level"));		
				request.setAttribute("cduration", request.getParameter("duration"));
				//---set session for refresh ----//
				request.setAttribute("ssSprinklerOn", "yes");
			}
			 
		}else if(request.getParameter("btnSchedule").compareTo("Scheduler Off")==0)
		{	
			
			//---- Call the function to set the sprinkler off ----------------//
			Schedule objSchedule = new Schedule(dtfromdate, dttodate, intlevel, intduration, 0);
			SprinklerService objSprService = new SprinklerService();
			Boolean SprinklerStatus = objSprService.SetSprinklerSetting(objSchedule, false);
			if (SprinklerStatus == true)
			{
				request.setAttribute("schedulerstatus", "Scheduler On");
				request.setAttribute("overrideok", "off");
				System.out.println("Sprinkler  Settings Off");	
				//---maintain control values----------------------------------//
				request.setAttribute("cfromDate", "");
				request.setAttribute("ctoDate", "");
				request.setAttribute("clevel", "10");		
				request.setAttribute("cduration","15");
			}
						
		}
		
		
		
	}
	
	private void HandleOverrideSchedule(HttpServletRequest request, HttpServletResponse response) throws SQLException {

		Date dtfromdate=null,dttodate=null;
		Integer intlevel=10, intduration=15;
		 try {
			 
			//-------- required field validations -----------------------------//
			 request.setAttribute("cfromDate", request.getParameter("fromDate"));
				request.setAttribute("ctoDate", request.getParameter("toDate"));
				request.setAttribute("clevel", request.getParameter("level"));		
				request.setAttribute("cduration", request.getParameter("duration"));

					request.setAttribute("schedulerstatus","Scheduler Off" );

				//} 
				
			 Boolean bRequired = false;
			 StringBuilder sbMessage = new StringBuilder("Please enter / correct the following:");
			 
			 System.out.println((String)request.getParameter("btnSchedule"));
			 if(request.getParameter("overrideok").compareTo("off")== 0)
			 {
				
					
					
				 sbMessage.append(" Scheduler is not set. Please set the Scheduler.");
				 request.setAttribute("ssReqFieldDefault", sbMessage); 
				 request.setAttribute("overrideok","off");
				 return;
			 }
			 
			   
		
			 
			 
				if(request.getParameter("overridefromDate").trim()== "")
				{
					sbMessage.append("From Date");
					bRequired = true;
				}
				if(request.getParameter("overrideToDate").trim()== "")
				{
					sbMessage.append(", To Date");
					bRequired = true;
				}
				if(request.getParameter("overrideLevel").trim()== "")
				{
					sbMessage.append(", Sprinkler Level, ");
					bRequired = true;
				}
				if(request.getParameter("overrideDuration").trim()== "")
				{
					sbMessage.append(", Duration ");
					bRequired = true;
				}
				
				if (bRequired == true)
				{
					request.setAttribute("ssReqFieldDefault", sbMessage);
					return;
				}

				Boolean bDateValid= false;
				StringBuilder sbDateValid = new StringBuilder("Please enter the following details:");
				
		    	SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm",Locale.ENGLISH);
		    	dtfromdate = df.parse(request.getParameter("overridefromDate"));
				dttodate = df.parse(request.getParameter("overrideToDate"));		
				intlevel = Integer.parseInt(request.getParameter("overrideLevel"));
				intduration = Integer.parseInt(request.getParameter("overrideDuration"));
					
				 if(dttodate.compareTo(dtfromdate) < 0)
				 {
					 bRequired = true;
					 sbMessage.append("\n From Date should be less than the To Date");
				 }
					
				 
					
					
					
		    	
		  } catch (ParseException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		  }
					
		  
		//---- toggle button value to show status --------------------------//
		
		if(request.getParameter("btnApplyOverride").compareTo("Override On")==0)
		{
			
			//---- Call the function to set the sprinkler On ----------------//
			Schedule objSchedule = new Schedule(dtfromdate, dttodate, intlevel, intduration, 1);
			SprinklerService objSprService = new SprinklerService();
			Boolean SprinklerStatus = objSprService.SetSprinklerSetting(objSchedule,true);
			if (SprinklerStatus == true)
			{
				request.setAttribute("overschedulerstatus", "Override Off");
				System.out.println("Sprinkler  Settings on");	
				//---maintain control values----------------------------------//
				request.setAttribute("ofromDate", request.getParameter("overridefromDate"));
				request.setAttribute("otoDate", request.getParameter("overrideToDate"));
				request.setAttribute("olevel", request.getParameter("overrideLevel"));		
				request.setAttribute("oduration", request.getParameter("overrideDuration"));
				
				//---maintain default control values also----------------------------------//
//				request.setAttribute("cfromDate", request.getParameter("fromDate"));
//				request.setAttribute("ctoDate", request.getParameter("toDate"));
//				request.setAttribute("clevel", request.getParameter("level"));		
//				request.setAttribute("cduration", request.getParameter("duration"));
//				request.setAttribute("schedulerstatus","Scheduler Off" );
//				
				request.setAttribute("overrideok","on");
				
				//---set session for refresh ----//
				request.setAttribute("ssSprinklerOn", "yes");
			}
			 
		}else if(request.getParameter("btnApplyOverride").compareTo("Override Off")==0)
		{	
			
			//---- Call the function to set the sprinkler off ----------------//
			Schedule objSchedule = new Schedule(dtfromdate, dttodate, intlevel, intduration, 0);
			SprinklerService objSprService = new SprinklerService();
			Boolean SprinklerStatus = objSprService.SetSprinklerSetting(objSchedule,true);
			if (SprinklerStatus == true)
			{
				request.setAttribute("overschedulerstatus", "Override On");
				System.out.println("Sprinkler  Override Settings Off");
				
				//---maintain default control values also----------------------------------//
//				request.setAttribute("cfromDate", request.getParameter("fromDate"));
//				request.setAttribute("ctoDate", request.getParameter("toDate"));
//				request.setAttribute("clevel", request.getParameter("level"));		
//				request.setAttribute("cduration", request.getParameter("duration"));
//				request.setAttribute("schedulerstatus","Scheduler Off" );
				
			
				
				//---maintain control values----------------------------------//
				request.setAttribute("ofromDate", "");
				request.setAttribute("otoDate", "");
				request.setAttribute("olevel", "10");		
				request.setAttribute("oduration","15");
				
				
				
//				request.setAttribute("overrideok", "off");
			}
						
		}
		
		
	}
	
	private void HandleMaintenanceSchedule(HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		
		
	}
	
	
}
