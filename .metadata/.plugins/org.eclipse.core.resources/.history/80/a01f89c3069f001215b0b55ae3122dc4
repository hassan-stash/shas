package shas.devices;

import java.io.IOException;
import java.sql.SQLException;
import java.text.Format;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.swing.JOptionPane;

import org.apache.catalina.connector.Request;

import shas.logic.SprinklerService;

/**
 * Servlet implementation class SprinklerServlet
 */
public class SprinklerServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public SprinklerServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		System.out.println("entering dopost");
			
		if(request.getParameter("btnSchedule")!=null)
		{
			try {
				HandleSchedule(request,response);
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

		
		
		request.getRequestDispatcher("SprinklerGUI.jsp").forward(request,response);
		 //System.out.println("Sprinkler...!!");
	}

	
	

	void HandleSchedule(HttpServletRequest request, HttpServletResponse response) throws SQLException
	{		
		Date dtfromdate=null,dttodate=null;
	    Integer intlevel=10, intduration=15;
		 try {
			 
			//-------- required field validations -----------------------------//
				
			 Boolean bRequired = false;
			 StringBuilder sbMessage = new StringBuilder("Please enter / correct the following:");
				if(request.getParameter("fromDate").trim()== "")
				{
					sbMessage.append("From Date");
					bRequired = true;
				}
				if(request.getParameter("toDate").trim()== "")
				{
					sbMessage.append(", To Date");
					bRequired = true;
				}
				if(request.getParameter("level").trim()== "")
				{
					sbMessage.append(", Sprinkler Level, ");
					bRequired = true;
				}
				if(request.getParameter("level").trim()== "")
				{
					sbMessage.append(", Sprinkler Level, ");
					bRequired = true;
				}
				
				Boolean bDateValid= false;
				StringBuilder sbDateValid = new StringBuilder("Please enter the following details:");
				 
				SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm",Locale.ENGLISH);
		    	dtfromdate = df.parse(request.getParameter("fromDate"));
				dttodate = df.parse(request.getParameter("toDate"));		
				intlevel = Integer.parseInt(request.getParameter("level"));
				
				
				
				
				
					
				if(dttodate.compareTo(dtfromdate) < 0)
				{
					 bRequired = true;
					 sbMessage.append("\n From Date should be less than the To Date");
				}
					
				if (bRequired == true)
				{
						request.setAttribute("ssReqFieldDefault", sbMessage);
						return;
				}
	
				
		  } catch (ParseException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		  }
					
		  
		//---- toggle button value to show status --------------------------//
		
		if(request.getParameter("btnSchedule").compareTo("Scheduler On")==0)
		{
			
			//---- Call the function to set the sprinkler On ----------------//
			//Schedule objSchedule = new Schedule(dtfromdate, dttodate, intlevel, intduration, 1, );
			SprinklerService objSprService = new SprinklerService();,
			Boolean SprinklerStatus = objSprService.SetSprinklerSetting(objSchedule, false);
			if (SprinklerStatus == true)
			{
				request.setAttribute("schedulerstatus", "Scheduler Off");
				//---set override---//
				request.setAttribute("overrideok", "on");
				
				System.out.println("Sprinkler  Settings on");	
				//---maintain control values----------------------------------//
				request.setAttribute("cfromDate", request.getParameter("fromDate"));
				request.setAttribute("ctoDate", request.getParameter("toDate"));
				request.setAttribute("clevel", request.getParameter("level"));		
				request.setAttribute("cduration", request.getParameter("duration"));
				//---set session for refresh ----//
				request.setAttribute("ssSprinklerOn", "yes");
			}
			 
		}else if(request.getParameter("btnSchedule").compareTo("Scheduler Off")==0)
		{	
			
			//---- Call the function to set the sprinkler off ----------------//
			Schedule objSchedule = new Schedule(dtfromdate, dttodate, intlevel, intduration, 0);
			SprinklerService objSprService = new SprinklerService();
			Boolean SprinklerStatus = objSprService.SetSprinklerSetting(objSchedule, false);
			if (SprinklerStatus == true)
			{
				request.setAttribute("schedulerstatus", "Scheduler On");
				request.setAttribute("overrideok", "off");
				System.out.println("Sprinkler  Settings Off");	
				//---maintain control values----------------------------------//
				request.setAttribute("cfromDate", "");
				request.setAttribute("ctoDate", "");
				request.setAttribute("clevel", "10");		
				request.setAttribute("cduration","15");
			}
						
		}
		
		
		
	}
	
	
	
	
}
